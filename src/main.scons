Import('env')
# env.Tool('Make')

import os

source = [
    'debug.cpp',
    'lemon_parser.cpp',
    'lexer.cpp',
    'lexer.internal.cc',
    'test.cpp',
]

LIBS = ['m', 'rt', 'fl', 'pthread']
CFLAGS='-Wall -Werror -DLOG_LEVEL_DEF=3 -g -Wno-unused-function -std=gnu99'

NopeRead = env.Library(
    target = 'NopeLib', 
    source = source, 
    LIBS=LIBS, 
    CPATH='.', 
    CFLAGS=CFLAGS
)


# moveBld = env.Move("lemon_parser.cpp", "lemon_parser.c")
env.Lemon(['lemon_parser.c', 'lemon_parser.h'], 'lemon_parser.yy')
env.Command( "lemon_parser.cpp", "lemon_parser.c", 
        Move("$TARGET", "$SOURCE"))

flexHeaderFile = os.path.join(env['variant_dir'], 'lexer.defines.h')
env['LEXFLAGS'] = '--header-file=' + flexHeaderFile 
env.CXXFile(source = 'lexer.internal.ll')

Depends(NopeRead, env['Lemon'])


